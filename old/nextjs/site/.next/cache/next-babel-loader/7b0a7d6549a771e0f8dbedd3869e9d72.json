{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Wrapper, Label, Input } from './style';\nexport default class TextInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      empty: true,\n      value: props.value,\n      labelOnTop: false\n    };\n    this.validateLength = this.validateLength.bind(this);\n    this.getFocus = this.getFocus.bind(this);\n    this.lostFocus = this.lostFocus.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.select) this.setState({\n      labelOnTop: true\n    });\n\n    if (this.props.value && this.props.value.length > 0) {\n      this.setState({\n        labelOnTop: true\n      });\n    }\n  }\n\n  getFocus() {\n    this.setState({\n      labelOnTop: true\n    });\n  }\n\n  lostFocus() {\n    if (this.state.empty && (this.props.maxWidth >= 80 || !this.props.maxWidth)) this.setState({\n      labelOnTop: false\n    });\n  }\n\n  validateLength(value) {\n    const inputValue = value.length === 0 ? true : false;\n    this.setState({\n      empty: inputValue\n    }, () => {\n      if (this.props.maxWidth <= 80) {\n        this.setState({\n          labelOnTop: !stateValue\n        });\n      }\n    });\n  }\n\n  changeValue(event) {\n    this.setState({\n      value: event.target.value\n    });\n    if (this.props.onChange) this.props.onChange(this.state.value);\n    this.validateLength(event.target.value);\n  }\n\n  render() {\n    const select = this.props.select ? this.props.select : '';\n    return __jsx(Wrapper, {\n      shadow: this.props.shadow,\n      hasSelect: this.props.select\n    }, select, __jsx(Input, {\n      ref: this.inputRef,\n      width: this.props.maxWidth,\n      shadow: this.props.shadow,\n      hasSelect: this.props.select,\n      name: this.props.name,\n      id: this.props.id,\n      type: this.props.type,\n      onFocus: this.getFocus,\n      onBlur: this.lostFocus,\n      value: this.state.value,\n      onChange: this.changeValue,\n      onKeyUp: this.changeValue\n    }), __jsx(Label, {\n      select: this.props.select,\n      labelOnTop: this.state.labelOnTop\n    }, this.props.children));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}