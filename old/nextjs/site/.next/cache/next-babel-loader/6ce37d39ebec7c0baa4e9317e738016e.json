{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjsWeb\\\\charlesannibal.github.io\\\\site\\\\src\\\\components\\\\TextInput\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Wrapper, Label, Input } from './style';\nexport default class TextInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      empty: true,\n      value: props.value,\n      labelOnTop: false\n    };\n    this.validateLength = this.validateLength.bind(this);\n    this.getFocus = this.getFocus.bind(this);\n    this.lostFocus = this.lostFocus.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.select) this.setState({\n      labelOnTop: true\n    });\n\n    if (this.props.value && this.props.value.length > 0) {\n      this.setState({\n        labelOnTop: true\n      });\n    }\n  }\n\n  getFocus() {\n    this.setState({\n      labelOnTop: true\n    });\n  }\n\n  lostFocus() {\n    if (this.state.empty && (this.props.maxWidth >= 80 || !this.props.maxWidth)) this.setState({\n      labelOnTop: false\n    });\n  }\n\n  validateLength(value) {\n    const inputValue = value.length === 0 ? true : false;\n    this.setState({\n      empty: inputValue\n    }, () => {\n      if (this.props.maxWidth <= 80) {\n        this.setState({\n          labelOnTop: !stateValue\n        });\n      }\n    });\n  }\n\n  changeValue(event) {\n    this.setState({\n      value: event.target.value\n    });\n    if (this.props.onChange) this.props.onChange(this.state.value);\n    this.validateLength(event.target.value);\n  }\n\n  render() {\n    const select = this.props.select ? this.props.select : '';\n    return __jsx(Wrapper, {\n      shadow: this.props.shadow,\n      hasSelect: this.props.select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, select, __jsx(Input, {\n      ref: this.inputRef,\n      width: this.props.maxWidth,\n      shadow: this.props.shadow,\n      hasSelect: this.props.select,\n      name: this.props.name,\n      id: this.props.id,\n      type: this.props.type,\n      onFocus: this.getFocus,\n      onBlur: this.lostFocus,\n      value: this.state.value,\n      onChange: this.changeValue,\n      onKeyUp: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), __jsx(Label, {\n      select: this.props.select,\n      labelOnTop: this.state.labelOnTop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, this.props.children));\n  }\n\n}","map":{"version":3,"sources":["D:/ProjsWeb/charlesannibal.github.io/site/src/components/TextInput/index.js"],"names":["React","Component","Wrapper","Label","Input","TextInput","constructor","props","state","empty","value","labelOnTop","validateLength","bind","getFocus","lostFocus","changeValue","inputRef","createRef","componentDidMount","select","setState","length","maxWidth","inputValue","stateValue","event","target","onChange","render","shadow","name","id","type","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Wrapper, Label, Input } from './style';\r\n\r\nexport default class TextInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            empty: true,\r\n            value: props.value,\r\n            labelOnTop: false\r\n        }\r\n\r\n        this.validateLength = this.validateLength.bind(this)\r\n        this.getFocus = this.getFocus.bind(this)\r\n        this.lostFocus = this.lostFocus.bind(this)\r\n        this.changeValue = this.changeValue.bind(this)\r\n\r\n        this.inputRef = React.createRef()\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({ labelOnTop: true })\r\n\r\n        if (this.props.value && this.props.value.length > 0) {\r\n            this.setState({ labelOnTop: true })\r\n        }\r\n    }\r\n\r\n    getFocus() {\r\n        this.setState({ labelOnTop: true })\r\n    }\r\n\r\n    lostFocus() {\r\n        if (this.state.empty && (this.props.maxWidth >= 80 || !this.props.maxWidth))\r\n            this.setState({ labelOnTop: false })\r\n    }\r\n\r\n    validateLength(value) {\r\n        const inputValue = value.length === 0 ? true : false\r\n\r\n        this.setState({ empty: inputValue }, () => {\r\n            if (this.props.maxWidth <= 80) {\r\n                this.setState({ labelOnTop: !stateValue })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeValue(event) {\r\n        this.setState({ value: event.target.value })\r\n        if (this.props.onChange)\r\n            this.props.onChange(this.state.value)\r\n        this.validateLength(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        const select = this.props.select ? this.props.select : ''\r\n        return (\r\n            <Wrapper shadow={this.props.shadow} hasSelect={this.props.select}>\r\n                {select}\r\n                <Input\r\n                    ref={this.inputRef}\r\n                    width={this.props.maxWidth}\r\n                    shadow={this.props.shadow}\r\n                    hasSelect={this.props.select}\r\n                    name={this.props.name}\r\n                    id={this.props.id}\r\n                    type={this.props.type}\r\n                    onFocus={this.getFocus}\r\n                    onBlur={this.lostFocus}\r\n                    value={this.state.value}\r\n                    onChange={this.changeValue}\r\n                    onKeyUp={this.changeValue} />\r\n                <Label select={this.props.select} labelOnTop={this.state.labelOnTop}>{this.props.children}</Label>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}