{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\ProjsWeb\\\\charlesannibal.github.io\\\\site\\\\src\\\\components\\\\Chat\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ChatWrapper } from './style.js';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\n\nvar Chat = function Chat() {\n  var _useState = useState([]),\n      messageList = _useState[0],\n      setMessageList = _useState[1];\n\n  var _useState2 = useState(new HubConnectionBuilder().withUrl(\"https://localhost:5001/chat\").withAutomaticReconnect().build()),\n      connection = _useState2[0],\n      setConnection = _useState2[1];\n\n  var ChatImplementation = function ChatImplementation() {\n    //Disable send button until connection is established\n    document.getElementById(\"sendButton\").disabled = true;\n    connection.on(\"ReceiveMessage\", function (user, message) {\n      var msg = message.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n      console.log(user, msg);\n      var encodedMsg = user + \" says \" + msg;\n      var newList = messageList.concat([encodedMsg]);\n      setMessageList(newList); //var li = document.createElement(\"li\");\n      //li.textContent = encodedMsg;\n      //document.getElementById(\"messagesList\").appendChild(li);\n    });\n    ChatImplementation(); //connection.off(\"ReceiveMessage\");\n\n    connection.start().then(function () {\n      document.getElementById(\"sendButton\").disabled = false;\n    })[\"catch\"](function (err) {\n      return console.error(err.toString());\n    });\n  };\n\n  useEffect(function () {\n    return function cleanup() {//connection.off(\"ReceiveMessage\");\n    };\n  });\n\n  var _sendMessage = function _sendMessage() {\n    console.log(\"clicou\");\n    var user = \"usere\"; //document.getElementById(\"userInput\").value;\n\n    var message = \"message2\"; //document.getElementById(\"messageInput\").value;\n\n    connection.invoke(\"SendMessage\", user, message)[\"catch\"](function (err) {\n      return console.error(err.toString());\n    }); //event.preventDefault();\n  };\n\n  var list = messageList.length > 0 ? messageList.map(function (message, index) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, message);\n  }) : \"\";\n  return __jsx(ChatWrapper, {\n    className: \"chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"test\"), __jsx(\"ul\", {\n    id: \"ReceiveMessage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, list), __jsx(\"button\", {\n    id: \"sendButton\",\n    onClick: function onClick(event) {\n      event.stopPropagation();\n\n      _sendMessage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Enviar\"));\n};\n\nexport default Chat;","map":{"version":3,"sources":["D:/ProjsWeb/charlesannibal.github.io/site/src/components/Chat/index.js"],"names":["React","useEffect","useState","ChatWrapper","HubConnectionBuilder","Chat","messageList","setMessageList","withUrl","withAutomaticReconnect","build","connection","setConnection","ChatImplementation","document","getElementById","disabled","on","user","message","msg","replace","console","log","encodedMsg","newList","concat","start","then","err","error","toString","cleanup","_sendMessage","invoke","list","length","map","index","event","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { ChatWrapper } from './style.js';\r\nimport { HubConnectionBuilder } from '@microsoft/signalr';\r\n\r\nconst Chat = () => {\r\n\r\n  const [messageList, setMessageList] = useState([])\r\n  const [connection, setConnection] = useState(new HubConnectionBuilder()\r\n    .withUrl(\"https://localhost:5001/chat\")\r\n    .withAutomaticReconnect()\r\n    .build());\r\n  const ChatImplementation = () => {\r\n\r\n\r\n    //Disable send button until connection is established\r\n    document.getElementById(\"sendButton\").disabled = true;\r\n\r\n    connection.on(\"ReceiveMessage\", function (user, message) {\r\n      const msg = message.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n      console.log(user, msg)\r\n\r\n      const encodedMsg = user + \" says \" + msg;\r\n\r\n      const newList = messageList.concat([encodedMsg])\r\n      setMessageList(newList)\r\n\r\n      //var li = document.createElement(\"li\");\r\n      //li.textContent = encodedMsg;\r\n      //document.getElementById(\"messagesList\").appendChild(li);\r\n    });\r\n\r\n    ChatImplementation()\r\n\r\n    //connection.off(\"ReceiveMessage\");\r\n\r\n\r\n    connection.start().then(function () {\r\n      document.getElementById(\"sendButton\").disabled = false;\r\n    }).catch(function (err) {\r\n      return console.error(err.toString());\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n\r\n    return function cleanup(){\r\n      //connection.off(\"ReceiveMessage\");\r\n    }\r\n  })\r\n\r\n  const _sendMessage = () => {\r\n    console.log(\"clicou\")\r\n    var user = \"usere\"//document.getElementById(\"userInput\").value;\r\n    var message = \"message2\"//document.getElementById(\"messageInput\").value;\r\n    connection.invoke(\"SendMessage\", user, message).catch(function (err) {\r\n      return console.error(err.toString());\r\n    });\r\n    //event.preventDefault();\r\n  }\r\n\r\n\r\n  let list =\r\n    messageList.length > 0\r\n      ? messageList.map((message, index) => {\r\n        return (\r\n          <li>\r\n            {message}\r\n          </li>\r\n        );\r\n      })\r\n      : \"\";\r\n\r\n  return (\r\n    <ChatWrapper className=\"chat\">\r\n      <p>test</p>\r\n      <ul id=\"ReceiveMessage\">{list}</ul>\r\n      <button id=\"sendButton\" onClick={(event) => { event.stopPropagation(); _sendMessage() }}>Enviar</button>\r\n    </ChatWrapper>\r\n  );\r\n};\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}