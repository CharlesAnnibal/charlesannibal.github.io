{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Wrapper, Label, Input } from './style';\n\nvar TextInput = /*#__PURE__*/function (_Component) {\n  _inherits(TextInput, _Component);\n\n  var _super = _createSuper(TextInput);\n\n  function TextInput(props) {\n    var _this;\n\n    _classCallCheck(this, TextInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      empty: true,\n      value: props.value,\n      labelOnTop: false\n    };\n    _this.validateLength = _this.validateLength.bind(_assertThisInitialized(_this));\n    _this.getFocus = _this.getFocus.bind(_assertThisInitialized(_this));\n    _this.lostFocus = _this.lostFocus.bind(_assertThisInitialized(_this));\n    _this.changeValue = _this.changeValue.bind(_assertThisInitialized(_this));\n    _this.inputRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(TextInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.select) this.setState({\n        labelOnTop: true\n      });\n\n      if (this.props.value && this.props.value.length > 0) {\n        this.setState({\n          labelOnTop: true\n        });\n      }\n    }\n  }, {\n    key: \"getFocus\",\n    value: function getFocus() {\n      this.setState({\n        labelOnTop: true\n      });\n    }\n  }, {\n    key: \"lostFocus\",\n    value: function lostFocus() {\n      if (this.state.empty && (this.props.maxWidth >= 80 || !this.props.maxWidth)) this.setState({\n        labelOnTop: false\n      });\n    }\n  }, {\n    key: \"validateLength\",\n    value: function validateLength(value) {\n      var _this2 = this;\n\n      var inputValue = value.length === 0 ? true : false;\n      this.setState({\n        empty: inputValue\n      }, function () {\n        if (_this2.props.maxWidth <= 80) {\n          _this2.setState({\n            labelOnTop: !stateValue\n          });\n        }\n      });\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(event) {\n      this.setState({\n        value: event.target.value\n      });\n      if (this.props.onChange) this.props.onChange(this.state.value);\n      this.validateLength(event.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var select = this.props.select ? this.props.select : '';\n      return __jsx(Wrapper, {\n        shadow: this.props.shadow,\n        hasSelect: this.props.select\n      }, select, __jsx(Input, {\n        ref: this.inputRef,\n        width: this.props.maxWidth,\n        shadow: this.props.shadow,\n        hasSelect: this.props.select,\n        name: this.props.name,\n        id: this.props.id,\n        type: this.props.type,\n        onFocus: this.getFocus,\n        onBlur: this.lostFocus,\n        value: this.state.value,\n        onChange: this.changeValue,\n        onKeyUp: this.changeValue\n      }), __jsx(Label, {\n        select: this.props.select,\n        labelOnTop: this.state.labelOnTop\n      }, this.props.children));\n    }\n  }]);\n\n  return TextInput;\n}(Component);\n\nexport { TextInput as default };","map":null,"metadata":{},"sourceType":"module"}