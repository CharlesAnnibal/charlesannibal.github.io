{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\ProjsWeb\\\\charlesannibal.github.io\\\\site\\\\src\\\\components\\\\TextInput\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Wrapper, Label, Input } from './style';\n\nvar TextInput = /*#__PURE__*/function (_Component) {\n  _inherits(TextInput, _Component);\n\n  var _super = _createSuper(TextInput);\n\n  function TextInput(props) {\n    var _this;\n\n    _classCallCheck(this, TextInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      empty: true,\n      value: props.value,\n      labelOnTop: false\n    };\n    _this.validateLength = _this.validateLength.bind(_assertThisInitialized(_this));\n    _this.getFocus = _this.getFocus.bind(_assertThisInitialized(_this));\n    _this.lostFocus = _this.lostFocus.bind(_assertThisInitialized(_this));\n    _this.changeValue = _this.changeValue.bind(_assertThisInitialized(_this));\n    _this.inputRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(TextInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.select) this.setState({\n        labelOnTop: true\n      });\n\n      if (this.props.value && this.props.value.length > 0) {\n        this.setState({\n          labelOnTop: true\n        });\n      }\n    }\n  }, {\n    key: \"getFocus\",\n    value: function getFocus() {\n      this.setState({\n        labelOnTop: true\n      });\n    }\n  }, {\n    key: \"lostFocus\",\n    value: function lostFocus() {\n      if (this.state.empty && (this.props.maxWidth >= 80 || !this.props.maxWidth)) this.setState({\n        labelOnTop: false\n      });\n    }\n  }, {\n    key: \"validateLength\",\n    value: function validateLength(value) {\n      var _this2 = this;\n\n      var inputValue = value.length === 0 ? true : false;\n      this.setState({\n        empty: inputValue\n      }, function () {\n        if (_this2.props.maxWidth <= 80) {\n          _this2.setState({\n            labelOnTop: !stateValue\n          });\n        }\n      });\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(event) {\n      this.setState({\n        value: event.target.value\n      });\n      if (this.props.onChange) this.props.onChange(this.state.value);\n      this.validateLength(event.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var select = this.props.select ? this.props.select : '';\n      return __jsx(Wrapper, {\n        shadow: this.props.shadow,\n        hasSelect: this.props.select,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, select, __jsx(Input, {\n        ref: this.inputRef,\n        width: this.props.maxWidth,\n        shadow: this.props.shadow,\n        hasSelect: this.props.select,\n        name: this.props.name,\n        id: this.props.id,\n        type: this.props.type,\n        onFocus: this.getFocus,\n        onBlur: this.lostFocus,\n        value: this.state.value,\n        onChange: this.changeValue,\n        onKeyUp: this.changeValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), __jsx(Label, {\n        select: this.props.select,\n        labelOnTop: this.state.labelOnTop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return TextInput;\n}(Component);\n\nexport { TextInput as default };","map":{"version":3,"sources":["D:/ProjsWeb/charlesannibal.github.io/site/src/components/TextInput/index.js"],"names":["React","Component","Wrapper","Label","Input","TextInput","props","state","empty","value","labelOnTop","validateLength","bind","getFocus","lostFocus","changeValue","inputRef","createRef","select","setState","length","maxWidth","inputValue","stateValue","event","target","onChange","shadow","name","id","type","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Wrapper, Label, Input } from './style';\r\n\r\nexport default class TextInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            empty: true,\r\n            value: props.value,\r\n            labelOnTop: false\r\n        }\r\n\r\n        this.validateLength = this.validateLength.bind(this)\r\n        this.getFocus = this.getFocus.bind(this)\r\n        this.lostFocus = this.lostFocus.bind(this)\r\n        this.changeValue = this.changeValue.bind(this)\r\n\r\n        this.inputRef = React.createRef()\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({ labelOnTop: true })\r\n\r\n        if (this.props.value && this.props.value.length > 0) {\r\n            this.setState({ labelOnTop: true })\r\n        }\r\n    }\r\n\r\n    getFocus() {\r\n        this.setState({ labelOnTop: true })\r\n    }\r\n\r\n    lostFocus() {\r\n        if (this.state.empty && (this.props.maxWidth >= 80 || !this.props.maxWidth))\r\n            this.setState({ labelOnTop: false })\r\n    }\r\n\r\n    validateLength(value) {\r\n        const inputValue = value.length === 0 ? true : false\r\n\r\n        this.setState({ empty: inputValue }, () => {\r\n            if (this.props.maxWidth <= 80) {\r\n                this.setState({ labelOnTop: !stateValue })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeValue(event) {\r\n        this.setState({ value: event.target.value })\r\n        if (this.props.onChange)\r\n            this.props.onChange(this.state.value)\r\n        this.validateLength(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        const select = this.props.select ? this.props.select : ''\r\n        return (\r\n            <Wrapper shadow={this.props.shadow} hasSelect={this.props.select}>\r\n                {select}\r\n                <Input\r\n                    ref={this.inputRef}\r\n                    width={this.props.maxWidth}\r\n                    shadow={this.props.shadow}\r\n                    hasSelect={this.props.select}\r\n                    name={this.props.name}\r\n                    id={this.props.id}\r\n                    type={this.props.type}\r\n                    onFocus={this.getFocus}\r\n                    onBlur={this.lostFocus}\r\n                    value={this.state.value}\r\n                    onChange={this.changeValue}\r\n                    onKeyUp={this.changeValue} />\r\n                <Label select={this.props.select} labelOnTop={this.state.labelOnTop}>{this.props.children}</Label>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}