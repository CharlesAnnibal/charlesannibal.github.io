{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\ProjsWeb\\\\charlesannibal.github.io\\\\site\\\\src\\\\components\\\\Chat\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ChatWrapper } from './style.js';\n\nvar Chat = function Chat() {\n  var ChatImplementation = function ChatImplementation() {\n    var connection = new signalR.HubConnectionBuilder().withUrl(\"/chatHub\").build(); //Disable send button until connection is established\n\n    document.getElementById(\"sendButton\").disabled = true;\n    connection.on(\"ReceiveMessage\", function (user, message) {\n      var msg = message.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n      var encodedMsg = user + \" says \" + msg;\n      var li = document.createElement(\"li\");\n      li.textContent = encodedMsg;\n      document.getElementById(\"messagesList\").appendChild(li);\n    });\n    connection.start().then(function () {\n      document.getElementById(\"sendButton\").disabled = false;\n    })[\"catch\"](function (err) {\n      return console.error(err.toString());\n    });\n    document.getElementById(\"sendButton\").addEventListener(\"click\", function (event) {\n      var user = document.getElementById(\"userInput\").value;\n      var message = document.getElementById(\"messageInput\").value;\n      connection.invoke(\"SendMessage\", user, message)[\"catch\"](function (err) {\n        return console.error(err.toString());\n      });\n      event.preventDefault();\n    });\n  };\n\n  return __jsx(ChatWrapper, {\n    className: \"chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"test\"));\n};\n\nexport default Chat;","map":{"version":3,"sources":["D:/ProjsWeb/charlesannibal.github.io/site/src/components/Chat/index.js"],"names":["React","ChatWrapper","Chat","ChatImplementation","connection","signalR","HubConnectionBuilder","withUrl","build","document","getElementById","disabled","on","user","message","msg","replace","encodedMsg","li","createElement","textContent","appendChild","start","then","err","console","error","toString","addEventListener","event","value","invoke","preventDefault"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEjB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAIC,UAAU,GAAG,IAAIC,OAAO,CAACC,oBAAZ,GAAmCC,OAAnC,CAA2C,UAA3C,EAAuDC,KAAvD,EAAjB,CAD+B,CAG/B;;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,QAAtC,GAAiD,IAAjD;AAEAP,IAAAA,UAAU,CAACQ,EAAX,CAAc,gBAAd,EAAgC,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACvD,UAAIC,GAAG,GAAGD,OAAO,CAACE,OAAR,CAAgB,IAAhB,EAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,IAAvC,EAA6C,MAA7C,EAAqDA,OAArD,CAA6D,IAA7D,EAAmE,MAAnE,CAAV;AACA,UAAIC,UAAU,GAAGJ,IAAI,GAAG,QAAP,GAAkBE,GAAnC;AACA,UAAIG,EAAE,GAAGT,QAAQ,CAACU,aAAT,CAAuB,IAAvB,CAAT;AACAD,MAAAA,EAAE,CAACE,WAAH,GAAiBH,UAAjB;AACAR,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCW,WAAxC,CAAoDH,EAApD;AACD,KAND;AAQAd,IAAAA,UAAU,CAACkB,KAAX,GAAmBC,IAAnB,CAAwB,YAAY;AAClCd,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,QAAtC,GAAiD,KAAjD;AACD,KAFD,WAES,UAAUa,GAAV,EAAe;AACtB,aAAOC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,QAAJ,EAAd,CAAP;AACD,KAJD;AAMAlB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCkB,gBAAtC,CAAuD,OAAvD,EAAgE,UAAUC,KAAV,EAAiB;AAC/E,UAAIhB,IAAI,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCoB,KAAhD;AACA,UAAIhB,OAAO,GAAGL,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCoB,KAAtD;AACA1B,MAAAA,UAAU,CAAC2B,MAAX,CAAkB,aAAlB,EAAiClB,IAAjC,EAAuCC,OAAvC,WAAsD,UAAUU,GAAV,EAAe;AACnE,eAAOC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,QAAJ,EAAd,CAAP;AACD,OAFD;AAGAE,MAAAA,KAAK,CAACG,cAAN;AACD,KAPD;AASD,GA7BD;;AA+BA,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAKD,CAtCD;;AAuCA,eAAe9B,IAAf","sourcesContent":["import React from 'react';\r\nimport { ChatWrapper } from './style.js';\r\n\r\nconst Chat = () => {\r\n\r\n  const ChatImplementation = () => {\r\n    var connection = new signalR.HubConnectionBuilder().withUrl(\"/chatHub\").build();\r\n\r\n    //Disable send button until connection is established\r\n    document.getElementById(\"sendButton\").disabled = true;\r\n\r\n    connection.on(\"ReceiveMessage\", function (user, message) {\r\n      var msg = message.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n      var encodedMsg = user + \" says \" + msg;\r\n      var li = document.createElement(\"li\");\r\n      li.textContent = encodedMsg;\r\n      document.getElementById(\"messagesList\").appendChild(li);\r\n    });\r\n\r\n    connection.start().then(function () {\r\n      document.getElementById(\"sendButton\").disabled = false;\r\n    }).catch(function (err) {\r\n      return console.error(err.toString());\r\n    });\r\n\r\n    document.getElementById(\"sendButton\").addEventListener(\"click\", function (event) {\r\n      var user = document.getElementById(\"userInput\").value;\r\n      var message = document.getElementById(\"messageInput\").value;\r\n      connection.invoke(\"SendMessage\", user, message).catch(function (err) {\r\n        return console.error(err.toString());\r\n      });\r\n      event.preventDefault();\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <ChatWrapper className=\"chat\">\r\n      <p>test</p>\r\n    </ChatWrapper>\r\n  );\r\n};\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}